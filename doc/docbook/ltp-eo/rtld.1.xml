<?xml version="1.0" encoding="UTF-8"?>
<!-- lifted from mdoc+troff by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='doclifter-rtld1'>
<!-- Copyright (c) 1995 Paul Kranenburg
All rights reserved. -->

<!-- Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
1. Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
3. All advertising materials mentioning features or use of this software
must display the following acknowledgment:
This product includes software developed by Paul Kranenburg.
3. The name of the author may not be used to endorse or promote products
derived from this software without specific prior written permission -->

<!-- THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. -->

<!-- $FreeBSD: stable/11/libexec/rtld&bsol;-elf/rtld.1 325409 2017&bsol;-11&bsol;-04 22:23:41Z bdrewery $ -->





<refmeta>
<refentrytitle>RTLD</refentrytitle>
<manvolnum>1</manvolnum>
</refmeta>

<refnamediv xml:id='doclifter-purpose'>
<refname>ld-elf.so.1</refname>
<!--
     NB: Doclifter added a @GLUE@ token to the initial refname.
     That was removed, in this text.

     The following were transposed from the original rtld.1
-->
<refname>ld.so</refname>
<refname>rtld</refname>
<refpurpose> run-time link-editor </refpurpose>
</refnamediv>
<!-- body begins here -->

<refsect1 xml:id='doclifter-description'><title>DESCRIPTION</title>
<para>The
<command remap='Nm'> ld-elf.so.1,</command>
utility is a self-contained shared object providing run-time
support for loading and link-editing shared objects into a process'
address space.
It is also commonly known as the dynamic linker.
It uses the data structures
contained within dynamically linked programs to determine which shared
libraries are needed and loads them using the
<citerefentry><refentrytitle>mmap</refentrytitle><manvolnum>2</manvolnum></citerefentry>
system call.</para>

<para>After all shared libraries have been successfully loaded,
<command remap='Nm'> ld-elf.so.1,</command>
proceeds to resolve external references from both the main program and
all objects loaded.
A mechanism is provided for initialization routines
to be called on a per-object basis, giving a shared object an opportunity
to perform any extra set-up before execution of the program proper begins.
This is useful for C++ libraries that contain static constructors.</para>

<para>When resolving dependencies for the loaded objects,
<command remap='Nm'> ld-elf.so.1,</command>
translates dynamic token strings in rpath and soname.
If the
<option>-z origin</option>
option of the static linker was set when linking the binary,
the token expansion is performed at the object load time, see
<citerefentry><refentrytitle>ld</refentrytitle><manvolnum>1</manvolnum></citerefentry>.
The following strings are recognized now:</para>
<variablelist remap='Bl -tag -width .Pa $PLATFORM'>
<varlistentry>
<term><filename>$ORIGIN</filename></term>
<listitem>
<para>Translated to the full path of the loaded object.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><filename>$OSNAME</filename></term>
<listitem>
<para>Translated to the name of the operating system implementation.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><filename>$OSREL</filename></term>
<listitem>
<para>Translated to the release level of the operating system.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><filename>$PLATFORM</filename></term>
<listitem>
<para>Translated to the machine hardware platform.</para>
</listitem>
</varlistentry>
</variablelist>

<para>The
<command remap='Nm'> ld-elf.so.1,</command>
utility itself is loaded by the kernel together with any dynamically-linked
program that is to be executed.
The kernel transfers control to the
dynamic linker.
After the dynamic linker has finished loading,
relocating, and initializing the program and its required shared
objects, it transfers control to the entry point of the program.
The following search order is used to locate required shared objects:</para>

<orderedlist remap='Bl -enum -offset indent -compact'>
<listitem>
<para><constant>DT_RPATH</constant>
of the referencing object unless that object also contains a
<constant>DT_RUNPATH</constant>
tag</para>
</listitem>
<listitem>
<para><constant>DT_RPATH</constant>
of the program unless the referencing object contains a
<constant>DT_RUNPATH</constant>
tag</para>
</listitem>
<listitem>
<para>Path indicated by
<envar>LD_LIBRARY_PATH</envar>
environment variable</para>
</listitem>
<listitem>
<para><constant>DT_RUNPATH</constant>
of the referencing object</para>
</listitem>
<listitem>
<para>Hints file produced by the
<citerefentry><refentrytitle>ldconfig</refentrytitle><manvolnum>8</manvolnum></citerefentry>
utility</para>
</listitem>
<listitem>
<para>The
<filename>/lib</filename>
and
<filename>/usr/lib</filename>
directories, unless the referencing object was linked using the
&ldquo;Fl z Ar nodefaultlib&rdquo;
option</para>
</listitem>
</orderedlist>

<para>The
<command remap='Nm'> ld-elf.so.1,</command>
utility
recognizes a number of environment variables that can be used to modify
its behaviour.
On 64-bit architectures, the linker for 32-bit objects recognizes
all the environment variables listed below, but is being prefixed with
<envar>LD_32_</envar>,
for example:
<envar>LD_32_TRACE_LOADED_OBJECTS</envar>.</para>
<variablelist remap='Bl -tag -width .Ev LD_LIBMAP_DISABLE'>
<varlistentry>
<term><envar>LD_DUMP_REL_POST</envar></term>
<listitem>
<para>If set,
<command remap='Nm'> ld-elf.so.1,</command>
will print a table containing all relocations after symbol
binding and relocation.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_DUMP_REL_PRE</envar></term>
<listitem>
<para>If set,
<command remap='Nm'> ld-elf.so.1,</command>
will print a table containing all relocations before symbol
binding and relocation.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_LIBMAP</envar></term>
<listitem>
<para>A library replacement list in the same format as
<citerefentry><refentrytitle>libmap.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>.
For convenience, the characters
' = '
and
' , '
can be used instead of a space and a newline.
This variable is parsed after
<citerefentry><refentrytitle>libmap.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
and will override its entries.
This variable is unset for set-user-ID and set-group-ID programs.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_LIBMAP_DISABLE</envar></term>
<listitem>
<para>If set, disables the use of
<citerefentry><refentrytitle>libmap.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>
and
<envar>LD_LIBMAP</envar>.
This variable is unset for set-user-ID and set-group-ID programs.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_ELF_HINTS_PATH</envar></term>
<listitem>
<para>This variable will override the default location of
&ldquo;hints&rdquo;
file.
This variable is unset for set-user-ID and set-group-ID programs.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_LIBRARY_PATH</envar></term>
<listitem>
<para>A colon separated list of directories, overriding the default search path
for shared libraries.
This variable is unset for set-user-ID and set-group-ID programs.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_LIBRARY_PATH_RPATH</envar></term>
<listitem>
<para>If the variable is specified and has a value starting with
any of &acute;y&acute;, &acute;Y&acute; or &acute;1&acute; symbols, the path specified by
<envar>LD_LIBRARY_PATH</envar>
variable is allowed to override the path from
<constant>DT_RPATH</constant>
for binaries which does not contain
<constant>DT_RUNPATH</constant>
tag.
For such binaries, when the variable
<envar>LD_LIBRARY_PATH_RPATH</envar>
is set,
&ldquo;Fl z Ar nodefaultlib&rdquo;
link-time option is ignored as well.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_PRELOAD</envar></term>
<listitem>
<para>A list of shared libraries, separated by colons and/or white space,
to be linked in before any
other shared libraries.
If the directory is not specified then
the directories specified by
<envar>LD_LIBRARY_PATH</envar>
will be searched first
followed by the set of built-in standard directories.
This variable is unset for set-user-ID and set-group-ID programs.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_LIBRARY_PATH_FDS</envar></term>
<listitem>
<para>A colon separated list of file descriptor numbers for library directories.
This is intended for use within
<citerefentry><refentrytitle>capsicum</refentrytitle><manvolnum>4</manvolnum></citerefentry>
sandboxes, when global namespaces such as the filesystem are unavailable.
It is consulted just after LD_LIBRARY_PATH.
This variable is unset for set-user-ID and set-group-ID programs.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_BIND_NOT</envar></term>
<listitem>
<para>When set to a nonempty string, prevents modifications of the PLT slots when
doing bindings.
As result, each call of the PLT-resolved function is resolved.
In combination with debug output, this provides complete account of
all bind actions at runtime.
This variable is unset for set-user-ID and set-group-ID programs.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_BIND_NOW</envar></term>
<listitem>
<para>When set to a nonempty string, causes
<command remap='Nm'> ld-elf.so.1,</command>
to relocate all external function calls before starting execution of the
program.
Normally, function calls are bound lazily, at the first call
of each function.
<envar>LD_BIND_NOW</envar>
increases the start-up time of a program, but it avoids run-time
surprises caused by unexpectedly undefined functions.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_TRACE_LOADED_OBJECTS</envar></term>
<listitem>
<para>When set to a nonempty string, causes
<command remap='Nm'> ld-elf.so.1,</command>
to exit after loading the shared objects and printing a summary which includes
the absolute pathnames of all objects, to standard output.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_TRACE_LOADED_OBJECTS_ALL</envar></term>
<listitem>
<para>When set to a nonempty string, causes
<command remap='Nm'> ld-elf.so.1,</command>
to expand the summary to indicate which objects caused each object to
be loaded.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_TRACE_LOADED_OBJECTS_FMT1</envar></term>
<term>
<envar>LD_TRACE_LOADED_OBJECTS_FMT2</envar></term>
<listitem>
<para>When set, these variables are interpreted as format strings a la
<citerefentry><refentrytitle>printf</refentrytitle><manvolnum>3</manvolnum></citerefentry>
to customize the trace output and are used by
<citerefentry><refentrytitle>ldd</refentrytitle><manvolnum>1</manvolnum></citerefentry>
<option>-f</option>
option and allows
<citerefentry><refentrytitle>ldd</refentrytitle><manvolnum>1</manvolnum></citerefentry>
to be operated as a filter more conveniently.
If the dependency name starts with string
<filename>lib</filename>,
<envar>LD_TRACE_LOADED_OBJECTS_FMT1</envar>
is used, otherwise
<envar>LD_TRACE_LOADED_OBJECTS_FMT2</envar>
is used.
The following conversions can be used:</para>
<variablelist remap='Bl -tag -width 4n'>
<varlistentry>
<term><literal>%a</literal></term>
<listitem>
<para>The main program's name
(also known as
&ldquo;__progname&rdquo;).</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>%A</literal></term>
<listitem>
<para>The value of the environment variable
<envar>LD_TRACE_LOADED_OBJECTS_PROGNAME</envar>.
Typically used to print both the names of programs and shared libraries
being inspected using
<citerefentry><refentrytitle>ldd</refentrytitle><manvolnum>1</manvolnum></citerefentry>.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>%o</literal></term>
<listitem>
<para>The library name.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>%p</literal></term>
<listitem>
<para>The full pathname as determined by
<command remap='Nm'> ld-elf.so.1,</command>
library search rules.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>%x</literal></term>
<listitem>
<para>The library's load address.</para>
</listitem>
</varlistentry>
</variablelist>

<para>Additionally,
' &bsol;n '
and
' &bsol;t '
are recognized and have their usual meaning.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_UTRACE</envar></term>
<listitem>
<para>If set,
<command remap='Nm'> ld-elf.so.1,</command>
will log events such as the loading and unloading of shared objects via
<citerefentry><refentrytitle>utrace</refentrytitle><manvolnum>2</manvolnum></citerefentry>.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><envar>LD_LOADFLTR</envar></term>
<listitem>
<para>If set,
<command remap='Nm'> ld-elf.so.1,</command>
will process the filtee dependencies of the loaded objects immediately,
instead of postponing it until required.
Normally, the filtees are opened at the time of the first symbol resolution
from the filter object.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>

<refsect1 xml:id='doclifter-direct_execution_mode'><title>DIRECT EXECUTION MODE</title>
<para><command remap='Nm'> ld-elf.so.1,</command>
is typically used implicitly, loaded by the kernel as requested by the
<constant>PT_INTERP</constant>
program header of the executed binary.
<productname>FreeBSD</productname>
also supports a direct execution mode for the dynamic linker.
In this mode, the user explicitly executes
<command remap='Nm'> ld-elf.so.1,</command>
and provides the path of the program to be linked and executed as
an argument.
This mode allows use of a non-standard dynamic linker for a program
activation without changing the binary or without changing
the installed dynamic linker.
Execution options may be specified.</para>

<para>The syntax of the direct invocation is
<filename>/libexec/ld-elf.so.1</filename>
<option>-f</option> <replaceable>fd</replaceable>
<option>-p</option>
<option>--</option>
<filename>image_path</filename>
<replaceable>image</replaceable> <replaceable>arguments</replaceable></para>

<para>The options are:</para>
<variablelist remap='Bl -tag -width indent'>
<varlistentry>
<term><option>-f</option> <replaceable>fd</replaceable></term>
<listitem>
<para>File descriptor
<replaceable>fd</replaceable>
references the binary to be activated by
<command remap='Nm'> ld-elf.so.1,</command>
It must already be opened in the process when executing
<command remap='Nm'> ld-elf.so.1,</command>
If this option is specified,
<replaceable>image_path</replaceable>
is only used to provide the
<varname>argv[0]</varname>
value to the program.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><option>-p</option></term>
<listitem>
<para>If the
<filename>image_path</filename>
argument specifies a name which does not contain a slash
&ldquo;Li /&rdquo;
character,
<command remap='Nm'> ld-elf.so.1,</command>
uses the search path provided by the environment variable
<constant>PATH</constant>
to find the binary to execute.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><option>--</option></term>
<listitem>
<para>Ends the
<command remap='Nm'> ld-elf.so.1,</command>
options.
The argument following
<option>--</option>
is interpreted as the path of the binary to execute.</para>
</listitem>
</varlistentry>
</variablelist>

<para>In the direct execution mode,
<command remap='Nm'> ld-elf.so.1,</command>
emulates verification of the binary execute permission for the
current user.
This is done to avoid breaking user expectations in naively restricted 
execution environments.
The verification only uses Unix
<constant>DACs</constant>,
ignores
<constant>ACLs</constant>,
and is naturally prone to race conditions.
Environments which rely on such restrictions are weak
and breakable on their own.</para>
</refsect1>

<refsect1 xml:id='doclifter-files'><title>FILES</title>
<variablelist remap='Bl -tag -width .Pa /var/run/ld-elf32.so.hints -compact'>
<varlistentry>
<term><filename>/var/run/ld-elf.so.hints</filename></term>
<listitem>
<para>Hints file.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><filename>/var/run/ld-elf32.so.hints</filename></term>
<listitem>
<para>Hints file for 32-bit binaries on 64-bit system.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><filename>/etc/libmap.conf</filename></term>
<listitem>
<para>The libmap configuration file.</para>
</listitem>
</varlistentry>
<varlistentry>
<term><filename>/etc/libmap32.conf</filename></term>
<listitem>
<para>The libmap configuration file for 32-bit binaries on 64-bit system.</para>
</listitem>
</varlistentry>
</variablelist>
</refsect1>

<refsect1 xml:id='doclifter-see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>ld</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>ldd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>capsicum</refentrytitle><manvolnum>4</manvolnum></citerefentry>,
<citerefentry><refentrytitle>elf</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
<citerefentry><refentrytitle>libmap.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
<citerefentry><refentrytitle>ldconfig</refentrytitle><manvolnum>8</manvolnum></citerefentry></para>
</refsect1>
</refentry>

